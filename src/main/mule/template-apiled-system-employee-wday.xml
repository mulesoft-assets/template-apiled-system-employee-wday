<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:workday="http://www.mulesoft.org/schema/mule/workday" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <http:listener-config name="template-apiled-system-employee-wday-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="template-apiled-system-employee-wday-config" raml="template-apiled-system-employee-wday.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <workday:config name="Workday__Basic" doc:name="Workday Config" doc:id="4e321fcd-4180-4c4e-9a34-887f57645fc2" >
		<workday:basic-connection username="${wday.username}" password="${wday.password}" tenantName="${wday.tenant}" hostName="${wday.host}" >
			<workday:transport >
				<workday:default-http-dispatcher-provider />
			</workday:transport>
		</workday:basic-connection>
	</workday:config>
	<configuration-properties doc:name="Configuration properties" doc:id="d143cffc-cd0c-4a30-bab7-57b3cc5639b9" file="common.properties" />
	<configuration-properties doc:name="Configuration properties" doc:id="3ee3b524-e7c4-444c-8b79-79b8b12b78dd" file="mule.${mule.env}.properties" />
	<validation:config name="Validation_Config" doc:name="Validation Config" doc:id="f0f1d953-e8f8-4bb3-90be-95a25906966d" />
	<flow name="system-api-main">
        <http:listener config-ref="template-apiled-system-employee-wday-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="template-apiled-system-employee-wday-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="cbb0cb1e-911d-454a-8dd7-7f8188524f6f" doc:name="400">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{message: "Bad request"}]]>
							</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="75ddc9dc-9487-41d2-b6e5-3aa1652fd33a" doc:name="404">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{message: "Resource not found"}]]>
							</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="12829396-e03b-4458-b19c-94dcea34ccd8" doc:name="405">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{message: "Method not allowed"}]]>
							</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[405]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="b5da9600-cc9e-4141-bbd2-d676457fff6b" doc:name="406">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{message: "Not acceptable"}]]>
							</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[406]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="a5bf9289-a061-4d40-ae67-3199db55e4fb" doc:name="415">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{message: "Unsupported media type"}]]>
							</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[415]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="e1e3aca7-8172-450e-90bd-38cd87567fa7" doc:name="501">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
								output application/json
								---
								{message: "Not Implemented"}]]>
						</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[501]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="template-apiled-system-employee-wday-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="template-apiled-system-employee-wday-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="7998e510-b40b-4b95-a579-c5ac5318f381" doc:name="404">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{message: "Resource not found"}]]>
							</ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
	<flow name="lookUpCountryFlow" doc:id="440ceb1d-48cc-44c3-b335-f89aa86c405e" >
		<ee:transform doc:name="Get Country in Workday" doc:id="cfe6ed24-8138-4914-ab95-2705468c0649" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
					output application/java
					---
					using (country = upper(payload) )
						( if (country == "US" or country == "USA") "USA" else
						( if (country == "UK" or country == "GBR") "GBR" else payload))
					]]>
					</ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Log the Country in Workday" doc:id="465b59bf-2a8b-4a13-928c-bfb2e1a061bf" message="Country is : #[payload]"/>
	</flow>
	<flow name="lookUpCountryRegionFlow" doc:id="b033cb74-8112-46e3-9e2f-de5fee8c6081">
		<ee:transform doc:name="Get Country in Workday" doc:id="04dbe318-e18b-48f6-a827-4e698afca5e2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
					output application/java
					---
					using (countryRegion = upper(payload))
						( if (countryRegion == "USA-CA") "USA-CA" else
						( if (countryRegion == "ILLINOIS") "Illinois" else payload))
					]]>
					</ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Log the Country region in Workday" doc:id="899cdf13-5ddc-4e14-9e53-0e0bad36ebbf" message="Country  region is : #[payload]" />
	</flow>
	<flow name="delete:\employees\(id):template-apiled-system-employee-wday-config">
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" doc:id="c9fda4c1-008a-410e-8b5f-4c85dfbec455" doc:name="Set id">
            <ee:variables>
                <ee:set-variable variableName="id"><![CDATA[attributes.uriParams.id]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		
		<ee:transform doc:name="Prepare GetWorkers request" doc:id="26a43370-b8f9-4859-85d4-d796d5e610fd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
					output application/xml
					ns ns0 urn:com.workday/bsvc
					---
					{
						ns0#Get_Workers_Request: {
							ns0#Request_Criteria: {
								ns0#Exclude_Inactive_Workers: true,
								ns0#Exclude_Employees: false,
								ns0#Exclude_Contingent_Workers: false
							},
							ns0#Request_References: {
								ns0#Worker_Reference: {
									ns0#ID @(ns0#"type": "Employee_ID"): vars.id
								}
							},
							ns0#Response_Group: {
								ns0#Include_Reference: true,
								ns0#Include_Personal_Information: true
							}
						}
					}
				]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<workday:invoke service="Human_Resources" operation="Get_Workers" doc:name="Get Workers from Workday" doc:id="6bdc1e3d-6480-47f6-81d6-1bf9070a1ea1" config-ref="Workday__Basic" />
		 <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="e8f5bfe2-a138-4508-9277-6c206536a8aa" doc:name="Transform Message to Java object">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
					output application/java
					---
					if (payload.Get_Workers_Response.Response_Results.Total_Results > 0 )  payload else null]]>
				</ee:set-payload>
            </ee:message>
        </ee:transform>
		<choice doc:name="Does Employee exist?" doc:id="31e231d9-ff2d-46e3-8d80-44d55b672d7b" >
			<when expression="#[payload != null]" >
				<ee:transform doc:name="Prepare TerminateEmployee request" doc:id="6969fde8-d147-4199-911d-d83a79e87e90" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
							output application/xml
							ns ns0 urn:com.workday/bsvc
							---
							{
								ns0#Terminate_Employee_Request: {
									ns0#Terminate_Employee_Data: {
										ns0#Employee_Reference: {
											ns0#ID @(ns0#"type": 'Employee_ID'): vars.id
										},
										ns0#Termination_Date: now() as Date,
										ns0#Terminate_Event_Data: {
											ns0#Primary_Reason_Reference: {
												ns0#ID @(ns0#"type": 'WID'): p("wday.terminate.employee.primary.reason.id")
											}
										}
									}
								}
							}]]>
							</ee:set-payload>
					</ee:message>
				</ee:transform>
				<workday:invoke service="Staffing" operation="Terminate_Employee" doc:name="Terminate Employee in Workday" doc:id="8fec0e8e-578c-45b0-9d93-8c99984c145b" config-ref="Workday__Basic" />
				<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="72cd84bb-3ade-4258-bb8f-7e7297d500cb">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
					output application/json
					---
					{
					  status: "OK"
					}]]>
					</ee:set-payload>
            </ee:message>
        </ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Set HTTP status 404" doc:id="3e5f4288-c000-422b-af38-7d3fd4a41ed2" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
							output application/json
							---
							{
								message: "Resource not found"
							}]]>
							</ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
							output application/java
							---
							404]]>
							</ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
    </flow>
    <flow name="patch:\employees\(id):application\json:template-apiled-system-employee-wday-config">
		<ee:transform doc:name="JSON to Object" doc:id="8ddc5ecc-a67e-475b-a9ad-2d20db5ba4a8" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
					output application/java
					---
					payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="id" ><![CDATA[%dw 2.0
					output application/java
					---
					attributes.uriParams.id
					]]></ee:set-variable>
				<ee:set-variable variableName="inputVars" ><![CDATA[%dw 2.0
					output application/java
					---
					payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<validation:all doc:name="Validate input JSON">
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.lastName]" message="Last name is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.addressLine]" message="Adress line is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.city]" message="City is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.country]" message="Country is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.postalCode]" message="Postal code is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.birthDate]" message="Birthdate is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.phone]" message="Phone is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.email]" message="Email is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.positionTitle]" message="Position title is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.weeklyHours]" message="Weekly hours is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.basePay]" message="Base pay is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.currency]" message="Currency is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.firstName]" message="First name is required."/>
            </validation:all>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" doc:id="04ef1794-bdb3-4df2-8ff3-298d866b6e6b" doc:name="Prepare GetWorkers request">
            <ee:variables>
                <ee:set-variable variableName="id"><![CDATA[%dw 2.0
					output application/xml
					ns ns0 urn:com.workday/bsvc
					---
					{
						ns0#Get_Workers_Request: {
							ns0#Request_Criteria: {
								ns0#Exclude_Inactive_Workers: true,
								ns0#Exclude_Employees: false,
								ns0#Exclude_Contingent_Workers: false
							},
							ns0#Request_References: {
								ns0#Worker_Reference: {
									ns0#ID @(ns0#"type": "Employee_ID"): vars.id
								}
							},
							ns0#Response_Group: {
								ns0#Include_Reference: true
							}
						}
					}
					]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <workday:invoke service="Human_Resources" operation="Get_Workers" doc:name="Get Workers from Workday" doc:id="6bdc1e3d-6480-47f6-81d6-1bf9070a1ea1" config-ref="Workday__Basic"/>
		 <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="e8f5bfe2-a138-4508-9277-6c206536a8aa" doc:name="Transform Message to Java object">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
					output application/java
					---
					if (payload.Get_Workers_Response.Response_Results.Total_Results > 0 )  payload else null]]>
					</ee:set-payload>
            </ee:message>
        </ee:transform>
        
        
        <choice doc:name="Does Employee exist?" doc:id="949f8895-717c-49de-997d-148bd0733681" >
			<when expression="#[payload != null]" >
				<ee:transform doc:name="Prepare MaintainContactInformation request" doc:id="c471cffe-1ec1-45c6-a56a-43f61377ef25">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
							output application/xml
							ns ns0 urn:com.workday/bsvc
							---
							{
								ns0#Maintain_Contact_Information_for_Person_Event_Request: {
									ns0#Maintain_Contact_Information_Data: {
										ns0#Worker_Reference: {
											ns0#ID @(ns0#"type": 'Employee_ID'): vars.id
										},
										ns0#Effective_Date: now() as Date,
										ns0#Worker_Contact_Information_Data: {
											(ns0#Address_Data: {
												ns0#Country_Reference: {
													ns0#ID @(ns0#"type": 'ISO_3166-1_Alpha-3_Code'): lookup("lookUpCountryFlow", vars.inputVars.country)
												},
												ns0#Address_Line_Data @(ns0#Type: 'ADDRESS_LINE_1'): vars.inputVars.adressLine,
												ns0#Municipality: vars.inputVars.city,
												(ns0#Country_Region_Reference: {
													ns0#ID @(ns0#"type": 'Country_Region_ID'):lookup("lookUpCountryRegionFlow", vars.inputVars.region)
												}) if (payload.region != null and payload.region != "Not presented"),
												ns0#Postal_Code: vars.inputVars.postalCode,
												ns0#Usage_Data: {
													ns0#Type_Data @(ns0#Primary: true): {
														ns0#Type_Reference: {
															ns0#ID @(ns0#"type": 'Communication_Usage_Type_ID'): 'HOME'
														}
													}
												}
											}) if (vars.inputVars.country?),
											(ns0#Phone_Data: {
												ns0#Phone_Number: vars.inputVars.phone,
												ns0#International_Phone_Code: '1',
												ns0#Phone_Device_Type_Reference: {
													ns0#ID @(ns0#"type": 'Phone_Device_Type_ID'): '1063.5'
												},
												ns0#Usage_Data @(ns0#Public: true): {
													ns0#Type_Data @(ns0#Primary: true): {
														ns0#Type_Reference: {
															ns0#ID @(ns0#"type": 'Communication_Usage_Type_ID'): 'HOME'
														}
													}
												}
											}) if (vars.inputVars.phone?),
											(ns0#Email_Address_Data: {
												ns0#Email_Address: vars.inputVars.email,
												ns0#Usage_Data @(ns0#Public: true): {
													ns0#Type_Data @(ns0#Primary: true): {
														ns0#Type_Reference: {
															ns0#ID @(ns0#"type": 'Communication_Usage_Type_ID'): 'HOME'
														}
													}
												}
											}) if (payload.attributes.inputVars.email?)
										}
									}
								}
							}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<workday:invoke service="Human_Resources" operation="Maintain_Contact_Information" doc:name="Maintain Contact Information in Workday" doc:id="70650349-aff6-453c-96fb-755a06908037" config-ref="Workday__Basic" />
				<ee:transform doc:name="Prepare JSON output structure" doc:id="040e61ab-6470-4f64-ad99-37322b19a069" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
							output application/json
							---
							{
								status: "OK"
							}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
				<ee:transform doc:name="Set HTTP status 404" doc:id="21b05c8c-95fc-4d4f-b4e7-de6da7940f93">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{
								message: "Resource not found"
							}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
							output application/java
							---
							404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
        
        
	
	   </flow>
	<flow name="get:\employees\(id):template-apiled-system-employee-wday-config">
		<set-variable value="#[attributes.uriParams.id]" doc:name="Save id" doc:id="854a5337-db32-4856-a226-4ad9b70d9e36" variableName="id"/>
	
         <ee:transform doc:name="Prepare GetWorkers request" doc:id="74505a10-9a00-430b-a068-a3d3e7420e21" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
					output application/xml
					ns ns0 urn:com.workday/bsvc
					---
					{
						ns0#Get_Workers_Request: {
							ns0#Request_Criteria: {
								ns0#Exclude_Inactive_Workers: true,
								ns0#Exclude_Employees: false,
								ns0#Exclude_Contingent_Workers: false
							},
							ns0#Request_References: {
								ns0#Worker_Reference: {
									ns0#ID @(ns0#"type": "Employee_ID"): attributes.id
								}
							},
							ns0#Response_Group: {
								ns0#Include_Reference: true,
								ns0#Include_Personal_Information: true,
								ns0#Include_Employment_Information: true,
								ns0#Include_Compensation: true
							}
						}
					}
					]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<workday:invoke service="Human_Resources" operation="Get_Workers" doc:name="Get Workers from Workday" doc:id="75fe810a-50cf-4a31-b2c2-99884714e952" config-ref="Workday__Basic" />
		 <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="e8f5bfe2-a138-4508-9277-6c206536a8aa" doc:name="Transform Message to Java object">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
					output application/java
					---
					if (payload.Get_Workers_Response.Response_Results.Total_Results > 0 )  payload else null]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<choice doc:name="Does Employee exist?" doc:id="949f8895-717c-49de-997d-148bd0733681" >
			<when expression="#[payload != null]" >
				<ee:transform doc:name="Transform response to JSON output structure" doc:id="040e61ab-6470-4f64-ad99-37322b19a069" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
							output application/json
							
							fun getCountryName(id) = {
								name:  if (id == "bc33aa3152ec42d4995f4791a106ed09") "USA" else "Not presented"
							}
							fun getCountryRegionName(id) = {
								name: if (id == "ec3d210e4240442e99a28fa70419aec5") "California" else "Not presented"
							}
							---
							using (	personData = payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data,
									positionData = payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Employment_Data.Worker_Job_Data.Position_Data){
								id: attributes.id,
								firstName: personData.Name_Data.Legal_Name_Data.Name_Detail_Data.First_Name,
								lastName: personData.Name_Data.Legal_Name_Data.Name_Detail_Data.Last_Name,
								addressLine: personData.Contact_Data.Address_Data.Address_Line_Data,
								city: personData.Contact_Data.Address_Data.Municipality,
								postalCode: personData.Contact_Data.Address_Data.Postal_Code,
								country: getCountryName(personData.Contact_Data.Address_Data.Country_Reference.ID).name,
								region: getCountryRegionName(personData.Contact_Data.Address_Data.Country_Region_Reference.ID).name,
								birthDate: personData.Birth_Date,
								phone: personData.Contact_Data.Phone_Data.Phone_Number,
								email: personData.Contact_Data.Email_Address_Data.Email_Address,
								positionTitle: positionData.Position_Title,
								hireDate: positionData.Start_Date,
								weeklyHours: positionData.Default_Weekly_Hours
							}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="ca2aa5c9-ca1d-4fd4-b63d-23097db3b287" />
			</when>
			<otherwise>
				<ee:transform doc:name="Set HTTP status 404" doc:id="21b05c8c-95fc-4d4f-b4e7-de6da7940f93">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
							output application/json
							---
							{
								message: "Resource not found"
							}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[%dw 2.0
							output application/java
							---
							404]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
    </flow>
	<flow name="get:\employees:template-apiled-system-employee-wday-config">
        <set-variable value="#[attributes.queryParams]" doc:name="Save queryParams" doc:id="b384f492-6c34-475f-a804-7a62cd8562ca" variableName="queryParams"/>
		<ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="6d3d0984-b48d-47cf-b4d4-30153938e32a" doc:name="Prepare GetWorkers request">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
					output application/xml
					ns ns0 urn:com.workday/bsvc
					---
					{
						ns0#Get_Workers_Request: {
							ns0#Request_Criteria: {
								(ns0#Transaction_Log_Criteria_Data: {
									ns0#Transaction_Date_Range_Data: {
										ns0#Updated_From: attributes.queryParams.modifiedAfter,
										ns0#Updated_Through: now() - |PT6S|
									}
								}) if (attributes.queryParams.modifiedAfter?),
								ns0#Exclude_Inactive_Workers: true,
								ns0#Exclude_Employees: false,
								ns0#Exclude_Contingent_Workers: false
							},
							ns0#Response_Filter: {
								ns0#Page: attributes.queryParams.page,
								ns0#Count: attributes.queryParams.pageSize
							},
							ns0#Response_Group: {
								ns0#Include_Personal_Information: true,
								ns0#Include_Employment_Information: true,
								ns0#Include_Compensation: true
							}
						}
					}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        
        
         <workday:invoke doc:name="Get Workers from Workday" doc:id="fb607142-196a-4f9d-809f-2012207ce5c1" config-ref="Workday__Basic" service="Human_Resources" operation="Get_Workers"/>
		
		<ee:transform doc:name="Transform response to JSON output structure" doc:id="f5f7ad05-fe06-49fb-af96-fef02ede8964" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
					output application/java
					
					fun getCountryName(id) = {
						name: if(id == "bc33aa3152ec42d4995f4791a106ed09") "USA" else "Not presented"
					}
					
					fun getCountryRegionName(id) = {
						name: if (id == "ec3d210e4240442e99a28fa70419aec5") "California" else "Not presented"
					}
					---
					payload.Get_Workers_Response.Response_Data.*Worker map {
						id: $.Worker_Data.Worker_ID,
						firstName: $.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.First_Name,
						lastName: $.Worker_Data.Personal_Data.Name_Data.Legal_Name_Data.Name_Detail_Data.Last_Name,
						addressLine: $.Worker_Data.Personal_Data.Contact_Data.Address_Data.Address_Line_Data,
						city: $.Worker_Data.Personal_Data.Contact_Data.Address_Data.Municipality,
						postalCode: $.Worker_Data.Personal_Data.Contact_Data.Address_Data.Postal_Code,
						country: getCountryName($.Worker_Data.Personal_Data.Contact_Data.Address_Data.Country_Reference.ID).name,
						region: getCountryRegionName($.Worker_Data.Personal_Data.Contact_Data.Address_Data.Country_Region_Reference.ID).name,
						birthDate: $.Worker_Data.Personal_Data.Birth_Date,
						phone: $.Worker_Data.Personal_Data.Contact_Data.Phone_Data.Phone_Number,
						email: $.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address,
						positionTitle: $.Worker_Data.Employment_Data.Worker_Job_Data.Position_Data.Position_Title,
						hireDate: $.Worker_Data.Employment_Data.Worker_Job_Data.Position_Data.Start_Date,
						weeklyHours: $.Worker_Data.Employment_Data.Worker_Job_Data.Position_Data.Default_Weekly_Hours
					}	]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
			<!-- START: MOCK -->
		
				<!-- 	
				
				<ee:transform doc:name="Mock Workday Workers" doc:id="97bbda19-3868-47f5-baab-734f61cff98c">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
		output application/json
		
		 [
		  {
		    "FirstName": "Logan",
		    "MiddleName": null,
		    "LastName": "McNeil",
		    "BirthPlace": null,
		    "DoB": "1972-05-25-07:00",
		    "Gender": "2",
		    "Email": "kit.wong+jobvite@mulesoft.com",
		    "Nationality": "US",
		    "State": "USA",
		    "Ssn": "USA-SSN"
		  },
		  {
		    "FirstName": "Steve",
		    "MiddleName": null,
		    "LastName": "Morgan",
		    "BirthPlace": null,
		    "DoB": "1959-05-22-07:00",
		    "Gender": "1",
		    "Email": "smorgan@workday.net",
		    "Nationality": "US",
		    "State": "USA",
		    "Ssn": "USA-SSN"
		  },
		  {
		    "FirstName": "Jose",
		    "MiddleName": null,
		    "LastName": "Sahad",
		    "BirthPlace": null,
		    "DoB": "1980-01-01-08:00",
		    "Gender": "",
		    "Email": "jose.amenta@mulesoft.com",
		    "Nationality": null,
		    "State": null,
		    "Ssn": null
		  },
		  {
		    "FirstName": "Template",
		    "MiddleName": null,
		    "LastName": "Guru",
		    "BirthPlace": null,
		    "DoB": "",
		    "Gender": "",
		    "Email": null,
		    "Nationality": null,
		    "State": null,
		    "Ssn": null
		  },
		  {
		    "FirstName": "SE",
		    "MiddleName": null,
		    "LastName": "Team",
		    "BirthPlace": null,
		    "DoB": "",
		    "Gender": "",
		    "Email": null,
		    "Nationality": null,
		    "State": null,
		    "Ssn": null
		  }
		]]]></ee:set-payload>
					</ee:message>
				</ee:transform>   -->
		
			<!-- END: MOCK -->
		
		
		<ee:transform doc:name="Apply ordering" doc:id="01b726c0-a0c5-4ed1-b0f9-ec040a0c28eb">
			<ee:message>
				<ee:set-payload><![CDATA[					%dw 2.0
					output application/java
					var orderBy_ = attributes.queryParams.orderBy
					var employees = (if (payload != null and attributes.queryParams !=null and attributes.queryParams.orderBy != null) 
							payload orderBy $[if ($[orderBy_] == null) null else orderBy_] default payload
						else payload)
					---
					if (attributes.queryParams.order !=null and lower(attributes.queryParams.order) == "desc" ) 
						employees[-1 to 0 ]
					else employees
						]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Transform payload into JSON output structure" doc:id="13d8a97e-4989-49e6-b6b7-8ccedef9a779" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
					output application/json
					---
					payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
    <flow name="post:\employees:application\json:template-apiled-system-employee-wday-config">
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="31d09ede-b232-4444-be18-04fbfb94fd4d" doc:name="JSON to Object">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
					output application/java
					---
					payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
		  <validation:all doc:name="Validate input JSON">
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.lastName]" message="Last name is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.addressLine]" message="Adress line is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.city]" message="City is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.country]" message="Country is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.postalCode]" message="Postal code is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.birthDate]" message="Birthdate is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.phone]" message="Phone is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.email]" message="Email is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.positionTitle]" message="Position title is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.weeklyHours]" message="Weekly hours is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.basePay]" message="Base pay is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.currency]" message="Currency is required."/>
            <validation:is-not-null doc:name="Is not null" config-ref="Validation_Config" value="#[payload.firstName]" message="First name is required."/>
            </validation:all>
		<ee:transform doc:name="Prepare HireEmployee request" doc:id="dc7e58de-bb18-4b8e-bb30-64c83592279d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
					output application/xml
					ns ns0 urn:com.workday/bsvc
					---
					{
						ns0#Get_Workers_Request: {
							ns0#Request_Criteria: {
								(ns0#Transaction_Log_Criteria_Data: {
									ns0#Transaction_Date_Range_Data: {
										ns0#Updated_From: attributes.queryParams.modifiedAfter,
										ns0#Updated_Through: now() - |PT6S|
									}
								}) if (attributes.queryParams.modifiedAfter?),
								ns0#Exclude_Inactive_Workers: true,
								ns0#Exclude_Employees: false,
								ns0#Exclude_Contingent_Workers: false
							},
							ns0#Response_Filter: {
								ns0#Page: attributes.queryParams.page,
								ns0#Count: attributes.queryParams.pageSize
							},
							ns0#Response_Group: {
								ns0#Include_Personal_Information: true,
								ns0#Include_Employment_Information: true,
								ns0#Include_Compensation: true
							}
						}
					}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		 <workday:invoke doc:name="Hire Employee in Workday" doc:id="fb607142-196a-4f9d-809f-2012207ce5c1" config-ref="Workday__Basic" service="Staffing" operation="Hire_Employee"/>
		
		<ee:transform doc:name="Get Id from Hire Employee response" doc:id="7db4c120-c753-4868-a5c9-a8cbcd94c2ac" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
					output application/java
					---
					payload.Hire_Employee_Event_Response.Employee_Reference]]></ee:set-payload>
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Set Location and HTTP status" doc:id="8f110543-b032-4cb6-8b48-102087963a76">
			<ee:message>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="outboundHeaders" ><![CDATA[%dw 2.0
					output application/java
					---
					{	
					 "Location": "http://" ++ p("api.domain") ++ ':' ++ p("http.port") ++ p("api.basePath") ++ "/employees/" ++ payload.ID	
					}]]></ee:set-variable>
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
					output application/java
					---
					201 ]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Build response" doc:id="5e4bf146-1f3d-4069-9a8a-cd67ba7c76a4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
					output application/json
					---
					{ 
						id: payload.ID
					}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		 </flow>
</mule>
